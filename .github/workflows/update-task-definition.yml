name: Update task definition
on:
  workflow_call:
    inputs:
      environment:
        description: 'The name of the environment to deploy the task definition to'
        type: string
        required: true
      aws-account-id:
        description: 'The id of the AWS account that the task definition is to be created in'
        type: string
        required: true
      image-uri:
        type: string
        description: 'The URI of the docker image for the task definition'

permissions:
  id-token: write
  contents: read

env:
  BRANCH: ${{ inputs.environment == 'integration' && 'main' || inputs.environment }}
  AWS_REGION: "eu-west-2"
  TF_VAR_image_name: ${{ inputs.image-uri }}

jobs:
  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    concurrency: "task-definition-tfstate-${{ inputs.environment }}"
    outputs:
      plan: ${{ steps.plan.outputs.stdout }}
      plan-exit-code: ${{ steps.plan.outputs.exitcode }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: communitiesuk/prsdb-infra
          ref: ${{ env.BRANCH }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ inputs.aws-account-id }}:role/github-actions-terraform-ci-plan-read-only"
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        # Exposes stdout, stderr and exitcode as outputs for any steps that run terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.1

      - name: Terraform init
        id: init
        run: terraform init -input=false
        working-directory: "terraform/${{ inputs.environment }}/ecs_task_definition"

      - name: Terraform plan
        id: plan
        # Terraform's "detailed-exitcode" codes are: 0 for "no changes", 1 for errors, 2 for "valid changes"
        # We don't save the plan as an artefact as it's sensitive and this repo is public
        run: terraform plan -input=false -detailed-exitcode
        continue-on-error: true
        working-directory: "terraform/${{ inputs.environment }}/ecs_task_definition"

      - name: Fail job if plan failed
        if: steps.plan.outputs.exitcode == 1
        run: exit 1

  apply:
    name: Terraform apply
    needs: plan
    runs-on: ubuntu-latest
    concurrency: "task-definition-tfstate-${{ inputs.environment }}"
    environment: ${{ inputs.environment }}
    if: needs.plan.outputs.plan-exit-code == 2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: communitiesuk/prsdb-infra
          ref: ${{ env.BRANCH }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ inputs.aws-account-id }}:role/github-actions-terraform-admin"
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.1

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: "terraform/${{ inputs.environment }}/ecs_task_definition"

      - name: Terraform apply
        run: terraform apply -auto-approve -input=false
        working-directory: "terraform/${{ inputs.environment }}/ecs_task_definition"
