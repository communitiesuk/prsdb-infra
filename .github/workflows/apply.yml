name: Apply
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      aws-account-id:
        required: true
        type: string
      maintenance-mode-on:
        required: true
        type: boolean

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: "eu-west-2"
  TF_VAR_alarm_email_address: ${{ secrets.ALARMS_EMAIL }}
  TF_VAR_maintenance_mode_on: ${{ inputs.maintenance-mode-on }}

jobs:
  validate-target-environment:
    name: Validate target environment
    uses: ./.github/workflows/validate-target-environment.yml
    with:
      environment: ${{ inputs.environment }}

  plan:
    name: Terraform plan
    needs: validate-target-environment
    runs-on: ubuntu-latest
    concurrency: tfstate-${{ inputs.environment }}
    outputs:
      plan: ${{ steps.plan.outputs.stdout }}
      plan-exit-code: ${{ steps.plan.outputs.exitcode }}
    defaults:
      run:
        working-directory: terraform/${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws-account-id }}:role/github-actions-terraform-ci-plan-read-only
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        # Exposes stdout, stderr and exitcode as outputs for any steps that run terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.1

      - name: Terraform init
        run: terraform init -input=false
        working-directory: terraform/${{ inputs.environment }}

      - name: Terraform plan
        id: plan
        # Terraform's "detailed-exitcode" codes are: 0 for "no changes", 1 for errors, 2 for "valid changes"
        # We don't save the plan as an artefact as it's sensitive and this repo is public
        run: terraform plan -input=false -detailed-exitcode
        continue-on-error: true
        working-directory: terraform/${{ inputs.environment }}

      - name: Fail job if plan failed
        if: steps.plan.outputs.exitcode == 1
        run: exit 1

      - name: Report pipeline status
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "environment": "${{ (inputs.environment == 'integration') && 'Integration' || (inputs.environment == 'production') && 'Production' || (inputs.environment == 'test') && 'Test' || inputs.environment }}",
              "commit": ${{ toJson(github.event.head_commit.message) }},
              "result": "${{ job.status == 'success' && 'Success :tick:' || 'Failure :no-cross:' }}",
              "url": "${{ format('https://github.com/communitiesuk/prsdb-infra/actions/runs/{0}', github.run_id) }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  apply:
    name: Terraform apply
    needs: plan
    runs-on: ubuntu-latest
    concurrency: tfstate-${{ inputs.environment }}
    environment: ${{ inputs.environment }}
    if: needs.plan.outputs.plan-exit-code == 2
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws-account-id }}:role/github-actions-terraform-admin
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.1

      - name: Terraform init
        run: terraform init -input=false
        working-directory: terraform/${{ inputs.environment }}

      - name: Terraform apply
        run: terraform apply -auto-approve -input=false
        working-directory: terraform/${{ inputs.environment }}

      - name: Report pipeline status
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "environment": "${{ (inputs.environment == 'integration') && 'Integration' || (inputs.environment == 'production') && 'Production' || (inputs.environment == 'test') && 'Test' || inputs.environment }}",
              "commit": ${{ toJson(github.event.head_commit.message) }},
              "result": "${{ job.status == 'success' && 'Success :tick:' || 'Failure :no-cross:' }}",
              "url": "${{ format('https://github.com/communitiesuk/prsdb-infra/actions/runs/{0}', github.run_id) }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}